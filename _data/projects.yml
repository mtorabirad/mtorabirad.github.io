# Project template
- name: Multilingual Grammatical Error Correction
  youtube: https://www.youtube.com/watch?v=qNxENuQQun8&t=18s
  description: | 
    - Trained token-level predictive models that had inference speed 10 times faster than traditional GEC systems and circumvented non-interpretability in those systems.
    - Identified XLNet as superior performer through comparison of currently available Transformer encoders.
    - Achieved F_0.5 test scores of 0.65 for English and 0.42 for German. 
    - Deployed the model via a Flask User Interface that allows users to submit documents through a web interface and receive corrected text.

- name: Sentiment Analysis of Tweets to Predict Stock Market Price Direction
  github: mtorabirad/Sentiment-Analysis-Tweets
  description: | # this will include new lines to allow paragraphs
    - Evaluated the efficacy of Tweet sentiment analysis to inform a trading strategy. 
    - Obtained data from Twitter and Yahoo Finance APIs. 
    - Used Spacy to build a customized NLP pipeline that feeds into a classifier. 
    - Through comparing the performance of different classifiers, successfully identified the one most appropriate for the task. 

- name: Computer Vision (CV)
  # github: mtorabirad/Pair-Trading-Reinforcement-Learning
  description: | 
    - To speed up the analysis of lab experiments, designing a CV system that automatically measures the size of solid particles with complex shapes growing inside a liquid. 
    - Generated training data using computer simulations and labeled them using OpenCV. 
    - Performed data augmentation. 
    - Comparing the performance of RCNN, Fast RCNN, Faster RCNN, and Mask RCNN for the task. 


- name: Pairs Trading with Reinforcement Learning
  github: mtorabirad/Pair-Trading-Reinforcement-Learning
  description: | 
    - Trained RL agent to optimize the parameters of a market-neutral pairs-trading strategy that resulted in significant increase in the final return compared to standard rule-based methods.
    - Made significant improvements to the popular source code, such as fixing a [critical bug](https://github.com/wai-i/Pair-Trading-Reinforcement-Learning/issues/8) and extending it from stateless to contextual bandit.
    - Reproduced results after identifying stock pairs from various sectors of the S&P 500. 


- name: Theory-training Neural Networks
  link: http://bit.ly/35tNMbv
  description: | 
    - To overcome the problem of curse of dimensionality, extended the application of neural networks to the field of computational materials science.
    - Theory-trained neural networks to solve differential equations. 
    - Introduced a technique that, by leveraging regularization, eliminates loss oscillations during training, decreases the final training loss, and improves the inference accuracy, with no additional computational cost. 
    and improves the inference accuracy, with no additional computational cost. 
    - Published papers and was invited to give a seminar about the project at **NVIDIA**.


- name: Regression
  github: mtorabirad/PricePrediction
  description: | 
    - Utilized Airbnb price data to determine whether predictive models could be used to achieve investment objectives.  
    - Developed an object-oriented code using scikit-learn, following software-engineering best practices, to build linear/tree-based regression models. 
    - Performed feature engineering/selection, Grid Search hyper-parameter tuning, statistical hypothesis testing, and feature importance analysis.
    - Drew insights that can be used to make more profitable business decisions. 

- name: MLOps
  description: | 
    - To present neural networks' distinguishing capabilities to decision-makers and facilitate collaboration with external project partners, deployed a theory-trained neural network on Google Cloud. Created server/client codes and an interactive Jupyter user interface. 
    - To reduce the response time, conducted profile-guided optimization.
    - Restructured the code to keep parts exposed to incoming requests to an absolute minimum. 
    - Resulted in a decrease in the response time from eight to less than two seconds. 
    - Enabled Marketing Department to present live simulations demonstrating cutting-edge research, which contributed to securing additional funding.






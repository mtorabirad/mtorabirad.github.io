# Project template
- name: Sentiment Analysis of Tweets to Predict Stock Market Price Direction
  github: mtorabirad/Sentiment-Analysis-Tweets
  description: | # this will include new lines to allow paragraphs
    - Obtained data from Twitter and Yahoo Finance APIs. 
    - Used Spacy to build a customized NLP pipeline that feeds into a classifier. 
    - Utilized a rule-based sentiment analysis tool specifically attuned to social media sentiments. 
    - Comparing the performance of different classifiers. 

- name: Computer Vision (CV)
  # github: mtorabirad/Pair-Trading-Reinforcement-Learning
  description: | 
    - To speed up the analysis of lab experiments, designing a CV system that automatically measures the size of solid particles with complex shapes growing inside a liquid. 
    - Generated training data using computer simulations and labeled them using OpenCV. 
    - Performed data augmentation. 
    - Comparing the performance of RCNN, Fast RCNN, Faster RCNN, and Mask RCNN for the task. 


- name: Pairs Trading with Reinforcement Learning
  github: mtorabirad/Pair-Trading-Reinforcement-Learning
  description: | 
    - Used RL to optimize the parameters of a market-neutral pairs-trading strategy. 
    - Utilized Monte Carlo Policy Gradient. 
    - In the original GitHub repository, forked/starred more than a hundred times, fixed a [critical bug](https://github.com/wai-i/Pair-Trading-Reinforcement-Learning/issues/8)
     that was unresolved for more than ten months. 
    - Extended the code from stateless to contextual bandit. 
    - Identified stock pairs in the top three S&P500 sectors. 
    - The RL optimized parameters resulted in a significant increase in the final return compared to standard parameter values.

- name: Theory-training Neural Networks
  link: http://bit.ly/35tNMbv
  description: | 
    - Extended the application of neural networks to my research field for the first time. 
    - Analyzed the deteriorating effects of an oscillating loss on a networkâ€™s ability to fit training data and on its inference performance. 
    - Introduced a theory-training technique that, by leveraging regularization, eliminates those oscillations, decreases the final training loss, 
    and improves the inference accuracy, with no additional computational cost. 
    - Was invited to give a seminar about the project at **NVIDIA**.

- name: Regression
  github: mtorabirad/PricePrediction
  description: | 
    - Developed an object-oriented code using scikit-learn, following software-engineering best practices, to build linear/tree-based 
    regression models to predict Airbnb prices. 
    - Performed feature engineering/selection, Grid Search hyper-parameter tuning, statistical hypothesis testing, and feature importance analysis. 
    - Drew insights that can be used to make more profitable business decisions. 

- name: MLOps
  description: | 
    - To present neural networks' distinguishing capabilities to decision-makers and facilitate collaboration with external project partners, deployed a theory-trained neural network on Google Cloud. Created server/client codes and an interactive Jupyter user interface. 
    - To reduce the response time, conducted profile-guided optimization.
    - Restructured the code to keep parts exposed to incoming requests to an absolute minimum. 
    - Resulted in a decrease in the response time from eight to less than two seconds. 
    - Enabled Marketing Department to present live simulations demonstrating cutting-edge research, which contributed to securing additional funding.





